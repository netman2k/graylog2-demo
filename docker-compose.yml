# References:
# - https://www.elastic.co/guide/en/elasticsearch/reference/5.6/docker.html
version: '3.0'
services:
  logstash:
    image: docker.elastic.co/logstash/logstash:5.6.10
    environment:
      TZ: Asia/Seoul
    ports:
      - "514:5000"
      - "514:5000/udp"
    volumes:
      - ./logstash/settings/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./logstash/pipeline/syslog-kafka.conf:/usr/share/logstash/pipeline/syslog.conf
    networks:
      backend:
    depends_on:
      - kafka

  zookeeper:
    image: zookeeper:3.4
    networks:
      backend:

  kafka:
    image: wurstmeister/kafka:2.11-1.1.1
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: ${KAFKA_AUTO_CREATE_TOPIC:-false}
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka -Dcom.sun.management.jmxremote.rmi.port=1099"
      JMX_PORT: 1099
    links:
      - zookeeper
    networks:
      backend:
    ports:
      - 9092:9092
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - kafka:/kafka
    depends_on:
      - zookeeper

  kafka-manager:
    image: sheepkiller/kafka-manager
    environment:
      ZK_HOSTS: "zookeeper:2181"
      APPLICATION_SECRET: "@dminP@ssw0rd"
    networks:
      backend:
    links:
      - zookeeper
      - kafka
    ports:
     - 9009:9000
    depends_on:
      - kafka

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${TAG:-5.6.9}
    volumes:
      - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - esdata1:/usr/share/elasticsearch/data
    env_file:
      - ./env/elasticsearch
    environment:
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      es:

  elasticsearch2:
    image: docker.elastic.co/elasticsearch/elasticsearch:${TAG:-5.6.9}
    volumes:
      - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - esdata2:/usr/share/elasticsearch/data
    env_file:
      - ./env/elasticsearch
    environment:
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      es:

  kibana:
    image: kibana:${TAG:-5.6.9}
    ports:
      - 5601:5601
    networks:
      es:
    depends_on:
      - elasticsearch

  cerebro:
    image: yannart/cerebro:latest
    ports:
      - 9100:9000
    networks:
      es:
    depends_on:
      - elasticsearch

  mongo:
    image: mongo:3
    networks:
      backend:
    volumes:
      - mongo_data:/data/db

  graylog:
    image: graylog2/graylog:${GRAYLOG_VERSION:-2.5.1-2}
    volumes:
      - ./graylog2/graylog.conf:/usr/share/graylog/data/config/graylog.conf
      - ./graylog2/GeoLite2-City/GeoLite2-City.mmdb:/etc/graylog/server/GeoLite2-City.mmdb
      - ./graylog2/metrics-reporter-prometheus-1.5.0.jar:/usr/share/graylog/plugin/metrics-reporter-prometheus-1.5.0.jar
    env_file:
      - ./env/graylog
    environment:
      - GRAYLOG_IS_MASTER=true
      - GRAYLOG_WEB_ENDPOINT_URI=http://${HOST_IP}:9000/api
    networks:
      es:
      backend:
    links:
      - elasticsearch
      - mongo
      - zookeeper
      - kafka
    depends_on:
      - mongo
      - elasticsearch
    ports:
      # Graylog web interface and REST API
      - 9000:9000
      # Beats
      - 5044:5044
      # GELF TCP
      - 12201:12201
      # GELF UDP
      - 12201:12201/udp

volumes:
  mongo_data:
  kafka:
  esdata1:
  esdata2:
networks:
  es:
  backend:
  
